{"pageTitle":"Spring mongo - SpringBoot","title":"Spring mongo","keyword":"spring,springframework,springboot","content":"<h2 id=\"description\" style=\"box-sizing: border-box; margin: 2rem 0px 0.5rem; letter-spacing: var(--heading-letter-spacing); font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-variant-numeric: ; font-variant-east-asian: ; font-variant-alternates: ; font-variant-position: ; font-weight: ; font-stretch: ; font-size: ; line-height: ; font-family: Inter, &quot;system-ui&quot;, &quot;Segoe UI&quot;, Roboto, Oxygen, Ubuntu, Cantarell, &quot;Fira Sans&quot;, &quot;Droid Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif; font-optical-sizing: ; font-size-adjust: ; font-kerning: ; font-feature-settings: ; font-variation-settings: ; color: rgb(27, 27, 27); orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;\"><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/parseInt#description\" style=\"box-sizing: border-box; text-decoration: none; color: var(--text-primary); text-decoration-skip-ink: auto; width: fit-content;\">Description</a></h2><div class=\"section-content\" style=\"box-sizing: border-box; color: rgb(27, 27, 27); font-family: Inter, &quot;system-ui&quot;, &quot;Segoe UI&quot;, Roboto, Oxygen, Ubuntu, Cantarell, &quot;Fira Sans&quot;, &quot;Droid Sans&quot;, &quot;Helvetica Neue&quot;, sans-serif; font-size: 16px; font-style: normal; font-variant-ligatures: normal; font-variant-caps: normal; font-weight: 400; letter-spacing: normal; orphans: 2; text-align: start; text-indent: 0px; text-transform: none; widows: 2; word-spacing: 0px; -webkit-text-stroke-width: 0px; white-space: normal; background-color: rgb(255, 255, 255); text-decoration-thickness: initial; text-decoration-style: initial; text-decoration-color: initial;\"><p style=\"box-sizing: border-box; margin: 1rem 0px 2rem; font: var(--type-article-p);\">The<span>&nbsp;</span><code style=\"box-sizing: border-box; border-radius: var(--elem-radius); font-family: var(--font-code); font-size: var(--type-smaller-font-size); tab-size: 4; background: var(--code-background-inline); padding: 0.125rem 0.25rem; width: fit-content;\">parseInt</code><span>&nbsp;</span>function<span>&nbsp;</span><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String#string_coercion\" style=\"box-sizing: border-box; text-decoration: underline; color: var(--text-link); text-decoration-skip-ink: auto; width: fit-content;\">converts its first argument to a string</a>, parses that string, then returns an integer or<span>&nbsp;</span><code style=\"box-sizing: border-box; border-radius: var(--elem-radius); font-family: var(--font-code); font-size: var(--type-smaller-font-size); tab-size: 4; background: var(--code-background-inline); padding: 0.125rem 0.25rem; width: fit-content;\">NaN</code>.</p><p style=\"box-sizing: border-box; margin: 1rem 0px 2rem; font: var(--type-article-p);\">If not<span>&nbsp;</span><code style=\"box-sizing: border-box; border-radius: var(--elem-radius); font-family: var(--font-code); font-size: var(--type-smaller-font-size); tab-size: 4; background: var(--code-background-inline); padding: 0.125rem 0.25rem; width: fit-content;\">NaN</code>, the return value will be the integer that is the first argument taken as a number in the specified<span>&nbsp;</span><code style=\"box-sizing: border-box; border-radius: var(--elem-radius); font-family: var(--font-code); font-size: var(--type-smaller-font-size); tab-size: 4; background: var(--code-background-inline); padding: 0.125rem 0.25rem; width: fit-content;\">radix</code>. (For example, a<span>&nbsp;</span><code style=\"box-sizing: border-box; border-radius: var(--elem-radius); font-family: var(--font-code); font-size: var(--type-smaller-font-size); tab-size: 4; background: var(--code-background-inline); padding: 0.125rem 0.25rem; width: fit-content;\">radix</code><span>&nbsp;</span>of<span>&nbsp;</span><code style=\"box-sizing: border-box; border-radius: var(--elem-radius); font-family: var(--font-code); font-size: var(--type-smaller-font-size); tab-size: 4; background: var(--code-background-inline); padding: 0.125rem 0.25rem; width: fit-content;\">10</code><span>&nbsp;</span>converts from a decimal number,<span>&nbsp;</span><code style=\"box-sizing: border-box; border-radius: var(--elem-radius); font-family: var(--font-code); font-size: var(--type-smaller-font-size); tab-size: 4; background: var(--code-background-inline); padding: 0.125rem 0.25rem; width: fit-content;\">8</code><span>&nbsp;</span>converts from octal,<span>&nbsp;</span><code style=\"box-sizing: border-box; border-radius: var(--elem-radius); font-family: var(--font-code); font-size: var(--type-smaller-font-size); tab-size: 4; background: var(--code-background-inline); padding: 0.125rem 0.25rem; width: fit-content;\">16</code><span>&nbsp;</span>from hexadecimal, and so on.)</p><p style=\"box-sizing: border-box; margin: 1rem 0px 2rem; font: var(--type-article-p);\">The<span>&nbsp;</span><code style=\"box-sizing: border-box; border-radius: var(--elem-radius); font-family: var(--font-code); font-size: var(--type-smaller-font-size); tab-size: 4; background: var(--code-background-inline); padding: 0.125rem 0.25rem; width: fit-content;\">radix</code><span>&nbsp;</span>argument is<span>&nbsp;</span><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number#number_coercion\" style=\"box-sizing: border-box; text-decoration: underline; color: var(--text-link); text-decoration-skip-ink: auto; width: fit-content;\">converted to a number</a>. If it's unprovided, or if the value becomes 0,<span>&nbsp;</span><code style=\"box-sizing: border-box; border-radius: var(--elem-radius); font-family: var(--font-code); font-size: var(--type-smaller-font-size); tab-size: 4; background: var(--code-background-inline); padding: 0.125rem 0.25rem; width: fit-content;\">NaN</code><span>&nbsp;</span>or<span>&nbsp;</span><code style=\"box-sizing: border-box; border-radius: var(--elem-radius); font-family: var(--font-code); font-size: var(--type-smaller-font-size); tab-size: 4; background: var(--code-background-inline); padding: 0.125rem 0.25rem; width: fit-content;\">Infinity</code><span>&nbsp;</span>(<code style=\"box-sizing: border-box; border-radius: var(--elem-radius); font-family: var(--font-code); font-size: var(--type-smaller-font-size); tab-size: 4; background: var(--code-background-inline); padding: 0.125rem 0.25rem; width: fit-content;\">undefined</code><span>&nbsp;</span>is coerced to<span>&nbsp;</span><code style=\"box-sizing: border-box; border-radius: var(--elem-radius); font-family: var(--font-code); font-size: var(--type-smaller-font-size); tab-size: 4; background: var(--code-background-inline); padding: 0.125rem 0.25rem; width: fit-content;\">NaN</code>), JavaScript assumes the following:</p><ol style=\"box-sizing: border-box; margin: 1rem 0px 2rem; list-style: decimal; padding: 0px 0px 0px 2rem;\"><li style=\"box-sizing: border-box; margin: 0.5rem 0px;\">If the input<span>&nbsp;</span><code style=\"box-sizing: border-box; border-radius: var(--elem-radius); font-family: var(--font-code); font-size: var(--type-smaller-font-size); tab-size: 4; background: var(--code-background-inline); padding: 0.125rem 0.25rem; width: fit-content;\">string</code>, with leading whitespace and possible<span>&nbsp;</span><code style=\"box-sizing: border-box; border-radius: var(--elem-radius); font-family: var(--font-code); font-size: var(--type-smaller-font-size); tab-size: 4; background: var(--code-background-inline); padding: 0.125rem 0.25rem; width: fit-content;\">+</code>/<code style=\"box-sizing: border-box; border-radius: var(--elem-radius); font-family: var(--font-code); font-size: var(--type-smaller-font-size); tab-size: 4; background: var(--code-background-inline); padding: 0.125rem 0.25rem; width: fit-content;\">-</code><span>&nbsp;</span>signs removed, begins with<span>&nbsp;</span><code style=\"box-sizing: border-box; border-radius: var(--elem-radius); font-family: var(--font-code); font-size: var(--type-smaller-font-size); tab-size: 4; background: var(--code-background-inline); padding: 0.125rem 0.25rem; width: fit-content;\">0x</code><span>&nbsp;</span>or<span>&nbsp;</span><code style=\"box-sizing: border-box; border-radius: var(--elem-radius); font-family: var(--font-code); font-size: var(--type-smaller-font-size); tab-size: 4; background: var(--code-background-inline); padding: 0.125rem 0.25rem; width: fit-content;\">0X</code><span>&nbsp;</span>(a zero, followed by lowercase or uppercase X),<span>&nbsp;</span><code style=\"box-sizing: border-box; border-radius: var(--elem-radius); font-family: var(--font-code); font-size: var(--type-smaller-font-size); tab-size: 4; background: var(--code-background-inline); padding: 0.125rem 0.25rem; width: fit-content;\">radix</code><span>&nbsp;</span>is assumed to be<span>&nbsp;</span><code style=\"box-sizing: border-box; border-radius: var(--elem-radius); font-family: var(--font-code); font-size: var(--type-smaller-font-size); tab-size: 4; background: var(--code-background-inline); padding: 0.125rem 0.25rem; width: fit-content;\">16</code><span>&nbsp;</span>and the rest of the string is parsed as a hexadecimal number.</li><li style=\"box-sizing: border-box; margin: 0.5rem 0px;\">If the input<span>&nbsp;</span><code style=\"box-sizing: border-box; border-radius: var(--elem-radius); font-family: var(--font-code); font-size: var(--type-smaller-font-size); tab-size: 4; background: var(--code-background-inline); padding: 0.125rem 0.25rem; width: fit-content;\">string</code><span>&nbsp;</span>begins with any other value, the radix is<span>&nbsp;</span><code style=\"box-sizing: border-box; border-radius: var(--elem-radius); font-family: var(--font-code); font-size: var(--type-smaller-font-size); tab-size: 4; background: var(--code-background-inline); padding: 0.125rem 0.25rem; width: fit-content;\">10</code><span>&nbsp;</span>(decimal).</li></ol><div class=\"notecard note\" id=\"sect2\" style=\"box-sizing: border-box; --note-background: var(--background-information); --note-theme: var(--icon-information); background-color: var(--note-background); border-left: 2px solid var(--note-theme); border-radius: var(--elem-radius); box-shadow: var(--shadow-01); margin: 2rem 0px; padding: 1rem 1rem 1rem 3rem; position: relative; color: var(--text-secondary);\"><p style=\"box-sizing: border-box; margin: 0px; color: var(--text-secondary); font: var(--type-article-p); padding-bottom: 0px;\"><strong style=\"box-sizing: border-box; font-weight: var(--font-body-strong-weight); letter-spacing: 0.02rem;\">Note:</strong><span>&nbsp;</span>Other prefixes like<span>&nbsp;</span><code style=\"box-sizing: border-box; border-radius: var(--elem-radius); font-family: var(--font-code); font-size: var(--type-smaller-font-size); tab-size: 4; background: var(--code-background-inline); padding: 0.125rem 0.25rem; width: fit-content; color: var(--notecard-link-color);\">0b</code>, which are valid in<span>&nbsp;</span><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Lexical_grammar#binary\" style=\"box-sizing: border-box; text-decoration: underline; color: var(--notecard-link-color); text-decoration-skip-ink: auto; width: fit-content;\">number literals</a>, are treated as normal digits by<span>&nbsp;</span><code style=\"box-sizing: border-box; border-radius: var(--elem-radius); font-family: var(--font-code); font-size: var(--type-smaller-font-size); tab-size: 4; background: var(--code-background-inline); padding: 0.125rem 0.25rem; width: fit-content; color: var(--notecard-link-color);\">parseInt()</code>.<span>&nbsp;</span><code style=\"box-sizing: border-box; border-radius: var(--elem-radius); font-family: var(--font-code); font-size: var(--type-smaller-font-size); tab-size: 4; background: var(--code-background-inline); padding: 0.125rem 0.25rem; width: fit-content; color: var(--notecard-link-color);\">parseInt()</code><span>&nbsp;</span>does<span>&nbsp;</span><em style=\"box-sizing: border-box; font-variation-settings: &quot;slnt&quot; -10;\">not</em><span>&nbsp;</span>treat strings beginning with a<span>&nbsp;</span><code style=\"box-sizing: border-box; border-radius: var(--elem-radius); font-family: var(--font-code); font-size: var(--type-smaller-font-size); tab-size: 4; background: var(--code-background-inline); padding: 0.125rem 0.25rem; width: fit-content; color: var(--notecard-link-color);\">0</code><span>&nbsp;</span>character as octal values either. The only prefix that<span>&nbsp;</span><code style=\"box-sizing: border-box; border-radius: var(--elem-radius); font-family: var(--font-code); font-size: var(--type-smaller-font-size); tab-size: 4; background: var(--code-background-inline); padding: 0.125rem 0.25rem; width: fit-content; color: var(--notecard-link-color);\">parseInt()</code><span>&nbsp;</span>recognizes is<span>&nbsp;</span><code style=\"box-sizing: border-box; border-radius: var(--elem-radius); font-family: var(--font-code); font-size: var(--type-smaller-font-size); tab-size: 4; background: var(--code-background-inline); padding: 0.125rem 0.25rem; width: fit-content; color: var(--notecard-link-color);\">0x</code><span>&nbsp;</span>or<span>&nbsp;</span><code style=\"box-sizing: border-box; border-radius: var(--elem-radius); font-family: var(--font-code); font-size: var(--type-smaller-font-size); tab-size: 4; background: var(--code-background-inline); padding: 0.125rem 0.25rem; width: fit-content; color: var(--notecard-link-color);\">0X</code><span>&nbsp;</span>for hexadecimal values — everything else is parsed as a decimal value if<span>&nbsp;</span><code style=\"box-sizing: border-box; border-radius: var(--elem-radius); font-family: var(--font-code); font-size: var(--type-smaller-font-size); tab-size: 4; background: var(--code-background-inline); padding: 0.125rem 0.25rem; width: fit-content; color: var(--notecard-link-color);\">radix</code><span>&nbsp;</span>is missing.<span>&nbsp;</span><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/Number\" style=\"box-sizing: border-box; text-decoration: underline; color: var(--notecard-link-color); text-decoration-skip-ink: auto; width: fit-content;\"><code style=\"box-sizing: border-box; border-radius: var(--elem-radius); font-family: var(--font-code); font-size: var(--type-smaller-font-size); tab-size: 4; background: var(--code-background-inline); padding: 0.125rem 0.25rem; width: fit-content; color: var(--notecard-link-color); margin-bottom: 0px;\">Number()</code></a><span>&nbsp;</span>or<span>&nbsp;</span><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt/BigInt\" style=\"box-sizing: border-box; text-decoration: underline; color: var(--notecard-link-color); text-decoration-skip-ink: auto; width: fit-content; margin-bottom: 0px;\"><code style=\"box-sizing: border-box; border-radius: var(--elem-radius); font-family: var(--font-code); font-size: var(--type-smaller-font-size); tab-size: 4; background: var(--code-background-inline); padding: 0.125rem 0.25rem; width: fit-content; color: var(--notecard-link-color); margin-bottom: 0px;\">BigInt()</code></a><span>&nbsp;</span>can be used instead to parse these prefixes.</p></div><p style=\"box-sizing: border-box; margin: 1rem 0px 2rem; font: var(--type-article-p);\">If the radix is<span>&nbsp;</span><code style=\"box-sizing: border-box; border-radius: var(--elem-radius); font-family: var(--font-code); font-size: var(--type-smaller-font-size); tab-size: 4; background: var(--code-background-inline); padding: 0.125rem 0.25rem; width: fit-content;\">16</code>,<span>&nbsp;</span><code style=\"box-sizing: border-box; border-radius: var(--elem-radius); font-family: var(--font-code); font-size: var(--type-smaller-font-size); tab-size: 4; background: var(--code-background-inline); padding: 0.125rem 0.25rem; width: fit-content;\">parseInt()</code><span>&nbsp;</span>allows the string to be optionally prefixed by<span>&nbsp;</span><code style=\"box-sizing: border-box; border-radius: var(--elem-radius); font-family: var(--font-code); font-size: var(--type-smaller-font-size); tab-size: 4; background: var(--code-background-inline); padding: 0.125rem 0.25rem; width: fit-content;\">0x</code><span>&nbsp;</span>or<span>&nbsp;</span><code style=\"box-sizing: border-box; border-radius: var(--elem-radius); font-family: var(--font-code); font-size: var(--type-smaller-font-size); tab-size: 4; background: var(--code-background-inline); padding: 0.125rem 0.25rem; width: fit-content;\">0X</code><span>&nbsp;</span>after the optional sign character (<code style=\"box-sizing: border-box; border-radius: var(--elem-radius); font-family: var(--font-code); font-size: var(--type-smaller-font-size); tab-size: 4; background: var(--code-background-inline); padding: 0.125rem 0.25rem; width: fit-content;\">+</code>/<code style=\"box-sizing: border-box; border-radius: var(--elem-radius); font-family: var(--font-code); font-size: var(--type-smaller-font-size); tab-size: 4; background: var(--code-background-inline); padding: 0.125rem 0.25rem; width: fit-content;\">-</code>).</p><p style=\"box-sizing: border-box; margin: 1rem 0px 2rem; font: var(--type-article-p);\">If the radix value (coerced if necessary) is not in range [2, 36] (inclusive)<span>&nbsp;</span><code style=\"box-sizing: border-box; border-radius: var(--elem-radius); font-family: var(--font-code); font-size: var(--type-smaller-font-size); tab-size: 4; background: var(--code-background-inline); padding: 0.125rem 0.25rem; width: fit-content;\">parseInt</code><span>&nbsp;</span>returns<span>&nbsp;</span><code style=\"box-sizing: border-box; border-radius: var(--elem-radius); font-family: var(--font-code); font-size: var(--type-smaller-font-size); tab-size: 4; background: var(--code-background-inline); padding: 0.125rem 0.25rem; width: fit-content;\">NaN</code>.</p><p style=\"box-sizing: border-box; margin: 1rem 0px 2rem; font: var(--type-article-p);\">For radices above<span>&nbsp;</span><code style=\"box-sizing: border-box; border-radius: var(--elem-radius); font-family: var(--font-code); font-size: var(--type-smaller-font-size); tab-size: 4; background: var(--code-background-inline); padding: 0.125rem 0.25rem; width: fit-content;\">10</code>, letters of the English alphabet indicate numerals greater than<span>&nbsp;</span><code style=\"box-sizing: border-box; border-radius: var(--elem-radius); font-family: var(--font-code); font-size: var(--type-smaller-font-size); tab-size: 4; background: var(--code-background-inline); padding: 0.125rem 0.25rem; width: fit-content;\">9</code>. For example, for hexadecimal numbers (base<span>&nbsp;</span><code style=\"box-sizing: border-box; border-radius: var(--elem-radius); font-family: var(--font-code); font-size: var(--type-smaller-font-size); tab-size: 4; background: var(--code-background-inline); padding: 0.125rem 0.25rem; width: fit-content;\">16</code>),<span>&nbsp;</span><code style=\"box-sizing: border-box; border-radius: var(--elem-radius); font-family: var(--font-code); font-size: var(--type-smaller-font-size); tab-size: 4; background: var(--code-background-inline); padding: 0.125rem 0.25rem; width: fit-content;\">A</code><span>&nbsp;</span>through<span>&nbsp;</span><code style=\"box-sizing: border-box; border-radius: var(--elem-radius); font-family: var(--font-code); font-size: var(--type-smaller-font-size); tab-size: 4; background: var(--code-background-inline); padding: 0.125rem 0.25rem; width: fit-content;\">F</code><span>&nbsp;</span>are used. The letters are case-insensitive.</p><p style=\"box-sizing: border-box; margin: 1rem 0px 2rem; font: var(--type-article-p);\"><code style=\"box-sizing: border-box; border-radius: var(--elem-radius); font-family: var(--font-code); font-size: var(--type-smaller-font-size); tab-size: 4; background: var(--code-background-inline); padding: 0.125rem 0.25rem; width: fit-content;\">parseInt</code><span>&nbsp;</span>understands exactly two signs:<span>&nbsp;</span><code style=\"box-sizing: border-box; border-radius: var(--elem-radius); font-family: var(--font-code); font-size: var(--type-smaller-font-size); tab-size: 4; background: var(--code-background-inline); padding: 0.125rem 0.25rem; width: fit-content;\">+</code><span>&nbsp;</span>for positive, and<span>&nbsp;</span><code style=\"box-sizing: border-box; border-radius: var(--elem-radius); font-family: var(--font-code); font-size: var(--type-smaller-font-size); tab-size: 4; background: var(--code-background-inline); padding: 0.125rem 0.25rem; width: fit-content;\">-</code><span>&nbsp;</span>for negative. It is done as an initial step in the parsing after whitespace is removed. If no signs are found, the algorithm moves to the following step; otherwise, it removes the sign and runs the number-parsing on the rest of the string.</p><p style=\"box-sizing: border-box; margin: 1rem 0px 2rem; font: var(--type-article-p);\">If<span>&nbsp;</span><code style=\"box-sizing: border-box; border-radius: var(--elem-radius); font-family: var(--font-code); font-size: var(--type-smaller-font-size); tab-size: 4; background: var(--code-background-inline); padding: 0.125rem 0.25rem; width: fit-content;\">parseInt</code><span>&nbsp;</span>encounters a character that is not a numeral in the specified<span>&nbsp;</span><code style=\"box-sizing: border-box; border-radius: var(--elem-radius); font-family: var(--font-code); font-size: var(--type-smaller-font-size); tab-size: 4; background: var(--code-background-inline); padding: 0.125rem 0.25rem; width: fit-content;\">radix</code>, it ignores it and all succeeding characters and returns the integer value parsed up to that point. For example, although<span>&nbsp;</span><code style=\"box-sizing: border-box; border-radius: var(--elem-radius); font-family: var(--font-code); font-size: var(--type-smaller-font-size); tab-size: 4; background: var(--code-background-inline); padding: 0.125rem 0.25rem; width: fit-content;\">1e3</code><span>&nbsp;</span>technically encodes an integer (and will be correctly parsed to the integer<span>&nbsp;</span><code style=\"box-sizing: border-box; border-radius: var(--elem-radius); font-family: var(--font-code); font-size: var(--type-smaller-font-size); tab-size: 4; background: var(--code-background-inline); padding: 0.125rem 0.25rem; width: fit-content;\">1000</code><span>&nbsp;</span>by<span>&nbsp;</span><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/parseFloat\" style=\"box-sizing: border-box; text-decoration: underline; color: var(--text-link); text-decoration-skip-ink: auto; width: fit-content;\"><code style=\"box-sizing: border-box; border-radius: var(--elem-radius); font-family: var(--font-code); font-size: var(--type-smaller-font-size); tab-size: 4; background: var(--code-background-inline); padding: 0.125rem 0.25rem; width: fit-content;\">parseFloat()</code></a>),<span>&nbsp;</span><code style=\"box-sizing: border-box; border-radius: var(--elem-radius); font-family: var(--font-code); font-size: var(--type-smaller-font-size); tab-size: 4; background: var(--code-background-inline); padding: 0.125rem 0.25rem; width: fit-content;\">parseInt(\"1e3\", 10)</code><span>&nbsp;</span>returns<span>&nbsp;</span><code style=\"box-sizing: border-box; border-radius: var(--elem-radius); font-family: var(--font-code); font-size: var(--type-smaller-font-size); tab-size: 4; background: var(--code-background-inline); padding: 0.125rem 0.25rem; width: fit-content;\">1</code>, because<span>&nbsp;</span><code style=\"box-sizing: border-box; border-radius: var(--elem-radius); font-family: var(--font-code); font-size: var(--type-smaller-font-size); tab-size: 4; background: var(--code-background-inline); padding: 0.125rem 0.25rem; width: fit-content;\">e</code><span>&nbsp;</span>is not a valid numeral in base 10. Because<span>&nbsp;</span><code style=\"box-sizing: border-box; border-radius: var(--elem-radius); font-family: var(--font-code); font-size: var(--type-smaller-font-size); tab-size: 4; background: var(--code-background-inline); padding: 0.125rem 0.25rem; width: fit-content;\">.</code><span>&nbsp;</span>is not a numeral either, the return value will always be an integer.</p><p style=\"box-sizing: border-box; margin: 1rem 0px 2rem; font: var(--type-article-p);\">If the first character cannot be converted to a number with the radix in use,<span>&nbsp;</span><code style=\"box-sizing: border-box; border-radius: var(--elem-radius); font-family: var(--font-code); font-size: var(--type-smaller-font-size); tab-size: 4; background: var(--code-background-inline); padding: 0.125rem 0.25rem; width: fit-content;\">parseInt</code><span>&nbsp;</span>returns<span>&nbsp;</span><code style=\"box-sizing: border-box; border-radius: var(--elem-radius); font-family: var(--font-code); font-size: var(--type-smaller-font-size); tab-size: 4; background: var(--code-background-inline); padding: 0.125rem 0.25rem; width: fit-content;\">NaN</code>. Leading whitespace is allowed.</p><p style=\"box-sizing: border-box; margin: 1rem 0px 2rem; font: var(--type-article-p);\">For arithmetic purposes, the<span>&nbsp;</span><code style=\"box-sizing: border-box; border-radius: var(--elem-radius); font-family: var(--font-code); font-size: var(--type-smaller-font-size); tab-size: 4; background: var(--code-background-inline); padding: 0.125rem 0.25rem; width: fit-content;\">NaN</code><span>&nbsp;</span>value is not a number in any radix. You can call the<span>&nbsp;</span><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isNaN\" style=\"box-sizing: border-box; text-decoration: underline; color: var(--text-link); text-decoration-skip-ink: auto; width: fit-content;\"><code style=\"box-sizing: border-box; border-radius: var(--elem-radius); font-family: var(--font-code); font-size: var(--type-smaller-font-size); tab-size: 4; background: var(--code-background-inline); padding: 0.125rem 0.25rem; width: fit-content;\">Number.isNaN</code></a><span>&nbsp;</span>function to determine if the result of<span>&nbsp;</span><code style=\"box-sizing: border-box; border-radius: var(--elem-radius); font-family: var(--font-code); font-size: var(--type-smaller-font-size); tab-size: 4; background: var(--code-background-inline); padding: 0.125rem 0.25rem; width: fit-content;\">parseInt</code><span>&nbsp;</span>is<span>&nbsp;</span><code style=\"box-sizing: border-box; border-radius: var(--elem-radius); font-family: var(--font-code); font-size: var(--type-smaller-font-size); tab-size: 4; background: var(--code-background-inline); padding: 0.125rem 0.25rem; width: fit-content;\">NaN</code>. If<span>&nbsp;</span><code style=\"box-sizing: border-box; border-radius: var(--elem-radius); font-family: var(--font-code); font-size: var(--type-smaller-font-size); tab-size: 4; background: var(--code-background-inline); padding: 0.125rem 0.25rem; width: fit-content;\">NaN</code><span>&nbsp;</span>is passed on to arithmetic operations, the operation result will also be<span>&nbsp;</span><code style=\"box-sizing: border-box; border-radius: var(--elem-radius); font-family: var(--font-code); font-size: var(--type-smaller-font-size); tab-size: 4; background: var(--code-background-inline); padding: 0.125rem 0.25rem; width: fit-content;\">NaN</code>.</p><p style=\"box-sizing: border-box; margin: 1rem 0px 2rem; font: var(--type-article-p);\">Because large numbers use the<span>&nbsp;</span><code style=\"box-sizing: border-box; border-radius: var(--elem-radius); font-family: var(--font-code); font-size: var(--type-smaller-font-size); tab-size: 4; background: var(--code-background-inline); padding: 0.125rem 0.25rem; width: fit-content;\">e</code><span>&nbsp;</span>character in their string representation (e.g.<span>&nbsp;</span><code style=\"box-sizing: border-box; border-radius: var(--elem-radius); font-family: var(--font-code); font-size: var(--type-smaller-font-size); tab-size: 4; background: var(--code-background-inline); padding: 0.125rem 0.25rem; width: fit-content;\">6.022e23</code><span>&nbsp;</span>for 6.022 × 10<sup style=\"box-sizing: border-box;\">23</sup>), using<span>&nbsp;</span><code style=\"box-sizing: border-box; border-radius: var(--elem-radius); font-family: var(--font-code); font-size: var(--type-smaller-font-size); tab-size: 4; background: var(--code-background-inline); padding: 0.125rem 0.25rem; width: fit-content;\">parseInt</code><span>&nbsp;</span>to truncate numbers will produce unexpected results when used on very large or very small numbers.<span>&nbsp;</span><code style=\"box-sizing: border-box; border-radius: var(--elem-radius); font-family: var(--font-code); font-size: var(--type-smaller-font-size); tab-size: 4; background: var(--code-background-inline); padding: 0.125rem 0.25rem; width: fit-content;\">parseInt</code><span>&nbsp;</span>should<span>&nbsp;</span><em style=\"box-sizing: border-box; font-variation-settings: &quot;slnt&quot; -10;\">not</em><span>&nbsp;</span>be used as a substitute for<span>&nbsp;</span><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/trunc\" style=\"box-sizing: border-box; text-decoration: underline; color: var(--text-link); text-decoration-skip-ink: auto; width: fit-content;\"><code style=\"box-sizing: border-box; border-radius: var(--elem-radius); font-family: var(--font-code); font-size: var(--type-smaller-font-size); tab-size: 4; background: var(--code-background-inline); padding: 0.125rem 0.25rem; width: fit-content;\">Math.trunc()</code></a>.</p><p style=\"box-sizing: border-box; margin: 1rem 0px 2rem; font: var(--type-article-p);\">To convert a number to its string literal in a particular radix, use<span>&nbsp;</span><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/toString\" style=\"box-sizing: border-box; text-decoration: underline; color: var(--text-link); text-decoration-skip-ink: auto; width: fit-content;\"><code style=\"box-sizing: border-box; border-radius: var(--elem-radius); font-family: var(--font-code); font-size: var(--type-smaller-font-size); tab-size: 4; background: var(--code-background-inline); padding: 0.125rem 0.25rem; width: fit-content;\">thatNumber.toString(radix)</code></a>.</p><p style=\"box-sizing: border-box; margin: 1rem 0px 2rem; font: var(--type-article-p);\">Because<span>&nbsp;</span><code style=\"box-sizing: border-box; border-radius: var(--elem-radius); font-family: var(--font-code); font-size: var(--type-smaller-font-size); tab-size: 4; background: var(--code-background-inline); padding: 0.125rem 0.25rem; width: fit-content;\">parseInt()</code><span>&nbsp;</span>returns a number, it may suffer from loss of precision if the integer represented by the string is<span>&nbsp;</span><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isSafeInteger\" style=\"box-sizing: border-box; text-decoration: underline; color: var(--text-link); text-decoration-skip-ink: auto; width: fit-content;\">outside the safe range</a>. The<span>&nbsp;</span><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt/BigInt\" style=\"box-sizing: border-box; text-decoration: underline; color: var(--text-link); text-decoration-skip-ink: auto; width: fit-content;\"><code style=\"box-sizing: border-box; border-radius: var(--elem-radius); font-family: var(--font-code); font-size: var(--type-smaller-font-size); tab-size: 4; background: var(--code-background-inline); padding: 0.125rem 0.25rem; width: fit-content;\">BigInt()</code></a><span>&nbsp;</span>function supports parsing integers of arbitrary length accurately, by returning a<span>&nbsp;</span><a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/BigInt\" style=\"box-sizing: border-box; text-decoration: underline; color: var(--text-link); text-decoration-skip-ink: auto; width: fit-content;\"><code style=\"box-sizing: border-box; border-radius: var(--elem-radius); font-family: var(--font-code); font-size: var(--type-smaller-font-size); tab-size: 4; background: var(--code-background-inline); padding: 0.125rem 0.25rem; width: fit-content;\">BigInt</code></a>.</p></div>"}